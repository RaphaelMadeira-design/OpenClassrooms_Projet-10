openapi: 3.0.0
info:
  title: Bank Argent API documentation
  description: Contains all available API endpoints in this codebase.
  version: '1.0.0'
  termsOfService: 'http://swagger.io/terms/'
servers:
  - url: 'http://localhost:3001/api/v1'
    description: Local server

paths:
  /user/login:
    post:
      tags:
        - User Module
      summary: Login
      description: API for logging in the user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LoginResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/signup:
    post:
      tags:
        - User Module
      summary: Signup
      description: API for user registration.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Signup successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid fields
        '500':
          description: Internal server error

  /user/profile:
    get:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: Retrieve user profile
      description: Returns personal information of the authenticated user.
      responses:
        '200':
          description: Successfully retrieved user profile
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '401':
          description: Unauthorized (user must be authenticated)
        '500':
          description: Internal server error
    put:
      security:
        - BearerAuth: []
      tags:
        - User Module
      summary: Update user profile
      description: Update the username of the authenticated user.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: User profile updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiResponse'
        '400':
          description: Invalid fields (invalid username format)
        '401':
          description: Unauthorized (user must be authenticated)
        '409':
          description: Conflict (username already exists)
        '500':
          description: Internal server error

  /user/accounts:
    get:
      security:
        - BearerAuth: []
      tags:
        - Accounts
      summary: Retrieve user accounts
      description: Returns a list of all accounts belonging to the authenticated user with their balances.
      responses:
        '200':
          description: Successfully retrieved accounts
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    accountId:
                      type: string
                      example: "account1"
                    accountName:
                      type: string
                      example: "Argent Bank Checking (x3448)"
                    balance:
                      type: number
                      format: float
                      example: 48,098.43
        '401':
          description: Unauthorized (user must be authenticated)
        '500':
          description: Internal server error

  /user/accounts/{accountId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Accounts
      summary: Retrieve account details
      description: Returns detailed information about a specific account.
      parameters:
        - name: accountId
          in: path
          required: true
          description: The unique identifier of the account
          schema:
            type: string
            example: "account1"
      responses:
        '200':
          description: Successfully retrieved account details
          content:
            application/json:
              schema:
                type: object
                properties:
                  accountId:
                    type: string
                    example: "account1"
                  accountName:
                    type: string
                    example: "Argent Bank Checking (x3448)"
                  balance:
                    type: number
                    format: float
                    example: 48,098.43
        '401':
          description: Unauthorized (user must be authenticated)
        '404':
          description: Account not found
        '500':
          description: Internal server error

  /user/accounts/{accountId}/transactions:
    get:
      security:
        - BearerAuth: []
      tags:
        - Transactions
      summary: Retrieve transactions for a specific account
      description: Returns a list of transactions for a specific account in the current month.
      parameters:
        - name: accountId
          in: path
          required: true
          description: The unique identifier of the account
          schema:
            type: string
            example: "account1"
      responses:
        '200':
          description: Successfully retrieved transactions for the current month
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    accountId:
                      type: string
                      example: "account1"
                    accountName:
                      type: string
                      example: "Argent Bank Checking (x3448)"
                    transactions:
                      type: array
                      items:
                        type: object
                        properties:
                          transactionId:
                            type: string
                            example: "456"
                          amount:
                            type: number
                            format: float
                            example: 8.00
                          date:
                            type: string
                            format: date
                            example: "2025-03-16"
                          beneficiary:
                            type: string
                            example: "Golden Sun Bakery"
                          balance:
                            type: number
                            format: float
                            example: 298.00
        '401':
          description: Unauthorized (user must be authenticated)
        '500':
          description: Internal server error

  /user/accounts/{accountId}/transactions/{transactionId}:
    get:
      security:
        - BearerAuth: []
      tags:
        - Transactions
      summary: Retrieve specific transaction details
      description: Returns detailed information for a specific transaction, including transaction type, category, and note.
      parameters:
        - name: accountId
          in: path
          required: true
          description: The unique identifier of the account
          schema:
            type: string
            example: "account1"
        - name: transactionId
          in: path
          required: true
          description: The unique identifier of the transaction
          schema:
            type: string
            example: "123"
      responses:
        '200':
          description: Successfully retrieved transaction details
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                    example: "123"
                  category:
                    type: string
                    example: "Food"
                  note:
                    type: string
                    example: "Birthday cake"
                  type:
                    type: string
                    example: "Electronic"
        '401':
          description: Unauthorized (user must be authenticated)
        '404':
          description: Transaction not found
        '500':
          description: Internal server error
          
    patch:
      security:
        - BearerAuth: []
      tags:
        - Transactions
      summary: Update a transaction
      description: Updates the category or note of a specific transaction
      parameters:
        - name: accountId
          in: path
          required: true
          description: The unique identifier of the account
          schema:
            type: string
            example: "account1"
        - name: transactionId
          in: path
          required: true
          description: The unique identifier of the transaction
          schema:
            type: string
            example: "123"
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: "Food"
                note:
                  type: string
                  example: "Birthday cake"
      responses:
        '200':
          description: Successfully updated transaction
          content:
            application/json:
              schema:
                type: object
                properties:
                  transactionId:
                    type: string
                    example: "123"
                  category:
                    type: string
                    example: "Food"
                  note:
                    type: string
                    example: "Birthday cake"
        '400':
          description: Invalid fields (category or note format)
        '404':
          description: Transaction not found
        '401':
          description: Unauthorized (user must be authenticated)

components:
  securitySchemes:
    BearerAuth:
      type: apiKey
      in: header
      name: Authorization

  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          description: User email
        password:
          type: string
          description: User password
        firstName:
          type: string
          description: User first name
        lastName:
          type: string
          description: User last name
        userName:
          type: string
          description: User public name

    Login:
      type: object
      properties:
        email:
          type: string
          description: User email
        password:
          type: string
          description: User password

    ApiResponse:
      type: object
      properties:
        status:
          type: integer
        message:
          type: string
        body:
          type: object
          properties:
            id:
              type: string
            email:
              type: string

    LoginResponse:
      type: object
      properties:
        token:
          type: string

    UserProfile:
      type: object
      properties:
        userName:
          type: string
          description: New username for the user